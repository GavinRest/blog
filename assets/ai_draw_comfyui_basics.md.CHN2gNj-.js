import{_ as e,c as r,o as d,ae as o}from"./chunks/framework.BHrE6nLq.js";const m=JSON.parse('{"title":"ComfyUI 基础指南","description":"","frontmatter":{},"headers":[],"relativePath":"ai/draw/comfyui_basics.md","filePath":"ai/draw/comfyui_basics.md"}'),a={name:"ai/draw/comfyui_basics.md"};function n(s,t,c,i,l,h){return d(),r("div",null,t[0]||(t[0]=[o('<h1 id="comfyui-基础指南" tabindex="-1">ComfyUI 基础指南 <a class="header-anchor" href="#comfyui-基础指南" aria-label="Permalink to &quot;ComfyUI 基础指南&quot;">​</a></h1><blockquote><p><a href="https://docs.comfy.org/zh-CN/get_started/introduction" target="_blank" rel="noreferrer">https://docs.comfy.org/zh-CN/get_started/introduction</a></p></blockquote><h2 id="大模型" tabindex="-1">大模型 <a class="header-anchor" href="#大模型" aria-label="Permalink to &quot;大模型&quot;">​</a></h2><p>确保 <code>ComfyUI/models/checkpoints</code> 文件夹至少有一个 <code>SD1.5</code> 模型文件。</p><ul><li>大模型存放路径：<code>ComfyUI/models/checkpoints</code> <strong>(必须)</strong></li><li>LoRA 模型路径：<code>ComfyUI/models/loras</code></li></ul><table tabindex="0"><thead><tr><th>版本</th><th>参数量</th><th>默认分辨率</th><th>风格</th><th>适用 GPU</th><th>适合人群</th></tr></thead><tbody><tr><td><strong>SD 1.5</strong></td><td>9.83 亿</td><td>512x512</td><td>多样（插画、动漫、写实）</td><td>4GB+</td><td>推荐普通用户,社区资源丰富</td></tr><tr><td><strong>SD 2.1</strong></td><td>10 亿</td><td>768x768</td><td>偏写实</td><td>6GB+</td><td>追求更高分辨率的用户</td></tr><tr><td><strong>SDXL</strong></td><td>35 亿</td><td>1024x1024</td><td>超高质量、细节丰富</td><td>8GB+</td><td>双模型架构基础模型（Base）和精炼模型（Refiner）</td></tr><tr><td><strong>SD 3.5 Large</strong></td><td>80 亿</td><td>1024x1024</td><td>超高质量、细节丰富</td><td>10GB+</td><td>专业用例，要求高性能的用户</td></tr><tr><td><strong>SD 3.5 Large Turbo</strong></td><td>80 亿</td><td>1024x1024</td><td>超高质量、细节丰富</td><td>8GB+</td><td>需要快速生成高质量图像的用户</td></tr><tr><td><strong>SD 3.5 Medium</strong></td><td>25 亿</td><td>768x768</td><td>高质量、细节丰富</td><td>6GB+</td><td>在消费级硬件上运行的用户</td></tr></tbody></table><h2 id="文生图节点" tabindex="-1">文生图节点 <a class="header-anchor" href="#文生图节点" aria-label="Permalink to &quot;文生图节点&quot;">​</a></h2><p>文生图(Text to Image) ，是<strong>AI</strong>绘图中的基础流程，通过输入文本描述来生成对应的图片，它的核心是<strong>扩散模型</strong>。</p><h3 id="_1-checkpoint-加载器" tabindex="-1">1. Checkpoint 加载器 <a class="header-anchor" href="#_1-checkpoint-加载器" aria-label="Permalink to &quot;1. Checkpoint 加载器&quot;">​</a></h3><p><strong>Checkpoint 加载器</strong> 是 <strong>ComfyUI</strong> 用于加载<strong>Stable Diffusion</strong>模型核心节点。它负责加载模型权重，并传递给 <strong>KSampler</strong> 及其他相关节点。</p><h3 id="_2-clip-text-encoder" tabindex="-1">2. CLIP Text Encoder <a class="header-anchor" href="#_2-clip-text-encoder" aria-label="Permalink to &quot;2. CLIP Text Encoder&quot;">​</a></h3><p>CLIP Text Encoder: <code>条件&gt;CLIP文本编码器</code> 主要用于<strong>正反提示词</strong></p><h3 id="_3-ksampler-连接的主要节点及作用" tabindex="-1">3. KSampler 连接的主要节点及作用 <a class="header-anchor" href="#_3-ksampler-连接的主要节点及作用" aria-label="Permalink to &quot;3. KSampler 连接的主要节点及作用&quot;">​</a></h3><p>KSampler: <code>采样&gt;KSampler</code> 采样节点</p><ul><li>KSampler 连接节点</li></ul><table tabindex="0"><thead><tr><th>连接节点</th><th>作用</th></tr></thead><tbody><tr><td><strong>Checkpoint Loader</strong></td><td>加载 Stable Diffusion 模型</td></tr><tr><td><strong>CLIP Text Encode (Positive)</strong></td><td>处理正提示词，影响图像风格</td></tr><tr><td><strong>CLIP Text Encode (Negative)</strong></td><td>处理反提示词，抑制不希望的元素</td></tr><tr><td><strong>Latent 图像输入</strong></td><td>放大潜变量，提高图像分辨率</td></tr><tr><td><strong>Latent 输出</strong></td><td>采样后的潜变量，后续需要解码成图像</td></tr><tr><td><strong>Empty Latent Image</strong></td><td>生成初始潜变量，决定图像尺寸</td></tr></tbody></table><ul><li>KSampler 主要参数调节</li></ul><table tabindex="0"><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td><strong>种子（Seed）</strong></td><td>控制随机性，相同的种子会生成相同的结果</td></tr><tr><td><strong>生成后控制（Post-generation Control）</strong></td><td>设置 <code>randomize</code> 让种子随机变化</td></tr><tr><td><strong>步数（Steps）</strong></td><td>采样步数，越高越精细，但生成时间增加</td></tr><tr><td><strong>cfg（引导系数）</strong></td><td>影响图像对提示词的遵循程度，通常 5~12</td></tr><tr><td><strong>采样器名称（Sampler Name）</strong></td><td>选择采样算法（Euler, DPM++ 等）</td></tr><tr><td><strong>调度器（Scheduler）</strong></td><td>影响去噪方式（Normal, Karras, Exponential 等）</td></tr><tr><td><strong>降噪（Denoise）</strong></td><td>影响最终图像的细节程度（通常 <code>1.0</code> 代表完整去噪）</td></tr></tbody></table><h3 id="vae-解码-vae-decode-节点介绍" tabindex="-1">VAE 解码（VAE Decode）节点介绍 <a class="header-anchor" href="#vae-解码-vae-decode-节点介绍" aria-label="Permalink to &quot;VAE 解码（VAE Decode）节点介绍&quot;">​</a></h3><p>VAE（Variational Autoencoder）作用是<strong>把“模糊的潜变量数据”翻译成清晰可见的图片</strong>。<code>Stable Diffusion</code> 生成的图像最初是<strong>一团复杂的“代码”（潜变量）</strong>，<code>VAE</code> 任务是 <strong>把“压缩数据”解码成完整、清晰、可见的图片！</strong></p><ul><li><p>VAE 解码的过程: (1) KSampler 生成的“潜变量” 🌀 → (2) 进入 VAE 解码器 🎛️ → (3) 变成可见的清晰图片 🖼️</p></li><li><p>VAE 解码节点有 <strong>两个输入端口</strong> 和 <strong>一个输出端口</strong>：</p></li></ul><table tabindex="0"><thead><tr><th>端口名称</th><th>类型</th><th>作用</th><th>典型连接对象</th></tr></thead><tbody><tr><td><strong>Latent</strong></td><td>输入（紫色）</td><td>需要解码的潜变量</td><td>连接 <code>KSampler</code></td></tr><tr><td><strong>vae</strong></td><td>输入（橙色）</td><td>VAE 模型文件</td><td>连接 <code>Checkpoint Loader</code></td></tr><tr><td><strong>图像（Image）</strong></td><td>输出（蓝色）</td><td>解码后的可见图像</td><td>连接 <code>保存图像</code> 或 <code>显示图像</code></td></tr></tbody></table><h2 id="comfyui-插件" tabindex="-1">ComfyUI 插件 <a class="header-anchor" href="#comfyui-插件" aria-label="Permalink to &quot;ComfyUI 插件&quot;">​</a></h2><p>插件安装路径 <code>ComfyUI_windows_portable\\ComfyUI\\custom_nodes</code> 下载解压到该路径即可</p><p><a href="https://github.com/juehackr/comfyui_fk_server" target="_blank" rel="noreferrer">翻译插件: comfyui_fk_server</a></p><p><a href="https://github.com/AlekPet/ComfyUI_Custom_Nodes_AlekPet" target="_blank" rel="noreferrer">提示词插件: ComfyUI_Custom_Nodes_AlekPet</a></p><p><a href="https://github.com/11cafe/comfyui-workspace-manager" target="_blank" rel="noreferrer">comfyui-workspace-manager插件</a></p><p><a href="https://github.com/ltdrdata/ComfyUI-Manager" target="_blank" rel="noreferrer">ComfyUI-Manager插件</a></p><p><a href="https://github.com/shadowcz007/comfyui-mixlab-nodes" target="_blank" rel="noreferrer">comfyui-mixlab-nodes 文字图片插件</a></p>',29)]))}const p=e(a,[["render",n]]);export{m as __pageData,p as default};

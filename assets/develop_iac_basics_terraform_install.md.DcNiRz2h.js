import{_ as a,c as i,o as n,ae as l}from"./chunks/framework.BHrE6nLq.js";const c=JSON.parse('{"title":"Terraform 安装","description":"","frontmatter":{},"headers":[],"relativePath":"develop/iac/basics/terraform_install.md","filePath":"develop/iac/basics/terraform_install.md"}'),p={name:"develop/iac/basics/terraform_install.md"};function t(e,s,h,k,r,o){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="terraform-安装" tabindex="-1">Terraform 安装 <a class="header-anchor" href="#terraform-安装" aria-label="Permalink to &quot;Terraform 安装&quot;">​</a></h1><p>本篇介绍如何安装 Terraform 及其基础使用方法，包括项目结构、HCL 配置文件的书写建议、Provider 的配置方式等。</p><h2 id="安装方式-推荐" tabindex="-1">安装方式（推荐） <a class="header-anchor" href="#安装方式-推荐" aria-label="Permalink to &quot;安装方式（推荐）&quot;">​</a></h2><blockquote><p><a href="https://developer.hashicorp.com/terraform/install" target="_blank" rel="noreferrer">https://developer.hashicorp.com/terraform/install</a></p></blockquote><ul><li>macOS 安装</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>brew tap hashicorp/tap</span></span>
<span class="line"><span>brew install hashicorp/tap/terraform</span></span></code></pre></div><ul><li>Windows 安装</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>将下载的 terraform.exe 添加到 C:\\Windows\\System32，或者新增环境变量也可以。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>(base) λ terraform.exe -v</span></span>
<span class="line"><span>Terraform v1.12.2</span></span>
<span class="line"><span>on windows_amd64</span></span></code></pre></div><h3 id="目录结构建议" tabindex="-1">目录结构建议 <a class="header-anchor" href="#目录结构建议" aria-label="Permalink to &quot;目录结构建议&quot;">​</a></h3><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>terraform-demo/</span></span>
<span class="line"><span>├── main.tf          # 主资源定义文件</span></span>
<span class="line"><span>├── outputs.tf       # 输出定义</span></span>
<span class="line"><span>└── provider.tf      # Provider 配置</span></span></code></pre></div><h3 id="provider-配置-provider-tf" tabindex="-1">Provider 配置（provider.tf） <a class="header-anchor" href="#provider-配置-provider-tf" aria-label="Permalink to &quot;Provider 配置（provider.tf）&quot;">​</a></h3><p>Provider 定义 Terraform 与目标平台的交互接口</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terraform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  required_providers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    aws</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;hashicorp/aws&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;6.6.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    alicloud</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      source </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;aliyun/alicloud&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;1.255.0&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">provider</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> &quot;aws&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  region</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;us-west-2&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 或您需要的其他区域</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 凭据管理 (选择一种方式)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方式1: 使用 profile (推荐用于本地开发)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # profile = &quot;my-aws-profile&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方式2: 环境变量 (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方式3: 直接写入 (不推荐用于生产，密钥会暴露)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # access_key = &quot;YOUR_ACCESS_KEY&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # secret_key = &quot;YOUR_SECRET_KEY&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方式4: IAM Roles (如在 EC2 实例上运行)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">provider</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> &quot;alicloud&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  region</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;cn-hangzhou&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 或您需要的其他区域</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 凭据管理 (选择一种方式)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方式1: 环境变量 (推荐)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # access_key = var.alicloud_access_key # 通过变量传入</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # secret_key = var.alicloud_secret_key # 通过变量传入</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方式2: Instance RAM Role (在阿里云 ECS 上运行时)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # security_token = var.alicloud_security_token (如果是STS Token)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 方式3: 直接写入 (强烈不推荐)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # access_key = &quot;YOUR_ALIYUN_ACCESS_KEY&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # secret_key = &quot;YOUR_ALIYUN_SECRET_KEY&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="主资源定义-main-tf" tabindex="-1">主资源定义（main.tf） <a class="header-anchor" href="#主资源定义-main-tf" aria-label="Permalink to &quot;主资源定义（main.tf）&quot;">​</a></h3><p>以下是创建 AWS EC2 实例的示例：</p><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resource</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> &quot;aws_instance&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> &quot;web&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ami</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">           =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ami-0c02fb55956c7d316&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  instance_type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;t2.micro&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Terraform-Demo&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="输出资源信息-outputs-tf" tabindex="-1">输出资源信息（outputs.tf） <a class="header-anchor" href="#输出资源信息-outputs-tf" aria-label="Permalink to &quot;输出资源信息（outputs.tf）&quot;">​</a></h3><div class="language-hcl vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">hcl</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> &quot;instance_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;EC2 实例 ID&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> aws_instance</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">web</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="使用流程" tabindex="-1">使用流程 <a class="header-anchor" href="#使用流程" aria-label="Permalink to &quot;使用流程&quot;">​</a></h3><p>在 Terraform 项目根目录下运行以下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 初始化 Provider 和模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plan</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 查看计划执行的更改</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apply</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 应用更改（按 y 确认）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">terraform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> destroy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   # 删除所有资源</span></span></code></pre></div>`,21)]))}const E=a(p,[["render",t]]);export{c as __pageData,E as default};

import{_ as d,c as e,o as a,ae as r}from"./chunks/framework.BHrE6nLq.js";const i="/images/tcpip/layer2/ethernet-frame-format.png",_=JSON.parse('{"title":"以太网编码与封装","description":"","frontmatter":{},"headers":[],"relativePath":"network/tcpip/layer2/ethernet_encoding_encapsulation.md","filePath":"network/tcpip/layer2/ethernet_encoding_encapsulation.md"}'),l={name:"network/tcpip/layer2/ethernet_encoding_encapsulation.md"};function n(o,t,s,p,c,h){return a(),e("div",null,t[0]||(t[0]=[r('<h1 id="以太网编码与封装" tabindex="-1">以太网编码与封装 <a class="header-anchor" href="#以太网编码与封装" aria-label="Permalink to &quot;以太网编码与封装&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>编码是物理层的编码技术，这里放在本章统一介绍。</p></div><h2 id="以太网编码技术" tabindex="-1">以太网编码技术 <a class="header-anchor" href="#以太网编码技术" aria-label="Permalink to &quot;以太网编码技术&quot;">​</a></h2><p>什么是编码 (Encoding)？ 编码 是将数据转换为适合在线缆中传输的电信号或光信号的过程。编码的主要作用有：</p><ul><li>时钟同步：帮助接收端从数据中恢复时钟，防止数据错乱。</li><li>错误检测：可以检测数据传输中的错误，减少传输故障。</li><li>信号平衡：使信号电平平衡，防止直流偏移，提升传输稳定性。</li><li>提高传输效率：用高效的编码方式，传输更多数据，占用更少的带宽。</li></ul><h2 id="常见以太网标准" tabindex="-1">常见以太网标准 <a class="header-anchor" href="#常见以太网标准" aria-label="Permalink to &quot;常见以太网标准&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>以太网标准</strong></th><th><strong>速率</strong></th><th><strong>编码方式</strong></th><th><strong>传输介质</strong></th><th><strong>接口类型</strong></th></tr></thead><tbody><tr><td>10BASE-T</td><td>10 Mbps</td><td>曼彻斯特编码</td><td>双绞线</td><td>RJ45</td></tr><tr><td>100BASE-TX</td><td>100 Mbps</td><td>4B/5B + MLT-3</td><td>双绞线</td><td>RJ45</td></tr><tr><td>1000BASE-T</td><td>1 Gbps</td><td>PAM-5</td><td>双绞线</td><td>RJ45</td></tr><tr><td>1000BASE-SX</td><td>1 Gbps</td><td>8B/10B</td><td>多模光纤</td><td>LC/SFP 接口</td></tr><tr><td>1000BASE-LX</td><td>1 Gbps</td><td>8B/10B</td><td>单模光纤</td><td>LC/SFP 接口</td></tr><tr><td>10GBASE-T</td><td>10 Gbps</td><td>PAM-16</td><td>双绞线</td><td>RJ45</td></tr><tr><td>10GBASE-SR</td><td>10 Gbps</td><td>64B/66B</td><td>多模光纤</td><td>LC/SFP+ 接口</td></tr><tr><td>10GBASE-LR</td><td>10 Gbps</td><td>64B/66B</td><td>单模光纤</td><td>LC/SFP+ 接口</td></tr><tr><td>40GBASE-SR4</td><td>40 Gbps</td><td>64B/66B</td><td>多模光纤</td><td>MPO/MTP 接口</td></tr><tr><td>100GBASE-LR4</td><td>100 Gbps</td><td>64B/66B</td><td>单模光纤</td><td>LC/CFP/QSFP28 接口</td></tr></tbody></table><h2 id="以太网封装-ethernet-frame-encapsulation-简介" tabindex="-1">以太网封装（Ethernet Frame Encapsulation）简介 <a class="header-anchor" href="#以太网封装-ethernet-frame-encapsulation-简介" aria-label="Permalink to &quot;以太网封装（Ethernet Frame Encapsulation）简介&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>以太网封装是将数据打包为帧（Frame）的过程，使数据通过以太网标准传输。以太网帧封装的结构遵循 IEEE 802.3 标准，通常由以下几部分组成。</p></div><ol><li><p>前导码(Preamble, 7字节) + SFD(1字节): 用于同步收发双方的时钟，确保数据能正确识别。</p><ul><li>帧起始分隔符(Start Frame Delimiter): 标记以太网帧的正式开始。通过SFD最后一位“1”，接收方知晓前导码的结束和数据帧的开始位置。</li></ul></li><li><p>目标 MAC 地址 (Destination MAC Address, 6字节): 表示数据的接收方 MAC 地址。</p></li><li><p>源 MAC 地址 (Source MAC Address, 6字节): 表示发送方的 MAC 地址。</p></li><li><p>类型/长度 (Type/Length, 2字节): 指示数据的协议类型（如 IPv4/IPv6）或数据长度。</p><ul><li><code>0x0800</code> 表示 IPv4</li><li><code>0x86DD</code> 表示 IPv6</li></ul></li><li><p>数据字段 (Payload): 承载实际传输的数据，最小 46 字节，最大 1500 字节。</p></li><li><p>填充 (Padding, 可选): 当数据小于 46 字节时，用 0 填充，使数据字段达到最小长度。</p></li><li><p>帧校验序列 (Frame Check Sequence, FCS, 4字节): 用于 CRC（循环冗余校验）检查，确保数据传输的完整性。</p></li></ol><p><img src="'+i+'" alt="ethernet_encapsulation"></p>',11)]))}const m=d(l,[["render",n]]);export{_ as __pageData,m as default};

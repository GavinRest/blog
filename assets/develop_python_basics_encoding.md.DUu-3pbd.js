import{_ as i,c as a,o as t,ae as n}from"./chunks/framework.BHrE6nLq.js";const c=JSON.parse('{"title":"Python 字符编码","description":"","frontmatter":{},"headers":[],"relativePath":"develop/python/basics/encoding.md","filePath":"develop/python/basics/encoding.md"}'),e={name:"develop/python/basics/encoding.md"};function h(l,s,p,k,o,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="python-字符编码" tabindex="-1">Python 字符编码 <a class="header-anchor" href="#python-字符编码" aria-label="Permalink to &quot;Python 字符编码&quot;">​</a></h1><p>在计算机中，字符必须以数字的形式存储和处理。这就涉及到<strong>字符编码</strong>（Character Encoding）。Python 语言，支持各种字符编码。</p><h2 id="_1-什么是字符编码" tabindex="-1">1. 什么是字符编码？ <a class="header-anchor" href="#_1-什么是字符编码" aria-label="Permalink to &quot;1. 什么是字符编码？&quot;">​</a></h2><p>字符编码是用于将<strong>字符映射到二进制数据</strong>的规则。计算机只能处理二进制数据（0 和 1），因此每个字符都需要一个唯一的二进制表示。</p><p>常见字符编码如下：</p><ul><li><strong>ASCII</strong>（美国标准信息交换码）</li><li><strong>GB2312/GBK</strong>（中文编码）</li><li><strong>Unicode</strong>（国际标准编码）</li><li><strong>UTF-8</strong>（Unicode 的一种变长存储方式）</li></ul><h2 id="_2-常见的字符编码格式" tabindex="-1">2. 常见的字符编码格式 <a class="header-anchor" href="#_2-常见的字符编码格式" aria-label="Permalink to &quot;2. 常见的字符编码格式&quot;">​</a></h2><h3 id="_2-1-ascii-编码" tabindex="-1">2.1 ASCII 编码 <a class="header-anchor" href="#_2-1-ascii-编码" aria-label="Permalink to &quot;2.1 ASCII 编码&quot;">​</a></h3><p>ASCII（American Standard Code for Information Interchange）使用 7 位或 8 位表示字符，共支持 128 个字符。ASCII 只能表示英语字符，无法支持中文等其他语言。</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>A -&gt; 01000001</span></span>
<span class="line"><span>B -&gt; 01000010</span></span>
<span class="line"><span>C -&gt; 01000011</span></span></code></pre></div><h3 id="_2-2-unicode-编码" tabindex="-1">2.2 Unicode 编码 <a class="header-anchor" href="#_2-2-unicode-编码" aria-label="Permalink to &quot;2.2 Unicode 编码&quot;">​</a></h3><p>Unicode 统一了所有字符的编码，为每个字符分配唯一的数字 ID。常见的 Unicode 编码方式包括：</p><ul><li><strong>UTF-8</strong>（最常用，变长编码，每个字符占 1-4 字节）</li><li><strong>UTF-16</strong>（定长编码，常用 2 或 4 字节）</li><li><strong>UTF-32</strong>（定长编码，每个字符 4 字节）</li></ul><p>UTF-8 兼容 ASCII，是目前最流行的字符编码。</p><h3 id="_2-3-gb2312-gbk-编码" tabindex="-1">2.3 GB2312/GBK 编码 <a class="header-anchor" href="#_2-3-gb2312-gbk-编码" aria-label="Permalink to &quot;2.3 GB2312/GBK 编码&quot;">​</a></h3><p>GB2312 是中国国家标准字符集，支持简体中文。 GBK（GB2312 的扩展）兼容 GB2312，并增加了更多汉字。</p><div class="language-plaintext vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">plaintext</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>“你” 在 GB2312 中编码为：0xC4E3</span></span>
<span class="line"><span>“好” 在 GB2312 中编码为：0xBAA3</span></span></code></pre></div><h2 id="_3-python-处理字符编码" tabindex="-1">3. Python 处理字符编码 <a class="header-anchor" href="#_3-python-处理字符编码" aria-label="Permalink to &quot;3. Python 处理字符编码&quot;">​</a></h2><p>Python 3 默认使用 <strong>UTF-8</strong> 编码，支持多种字符编码方式。</p><h3 id="_3-1-编码与解码" tabindex="-1">3.1 编码与解码 <a class="header-anchor" href="#_3-1-编码与解码" aria-label="Permalink to &quot;3.1 编码与解码&quot;">​</a></h3><p>在 Python 中，字符串是 <code>str</code> 类型，二进制数据是 <code>bytes</code> 类型。需要使用 <code>encode()</code> 和 <code>decode()</code> 进行转换。</p><h4 id="_3-1-1-字符串编码-str-→-bytes" tabindex="-1">3.1.1 字符串编码（str → bytes） <a class="header-anchor" href="#_3-1-1-字符串编码-str-→-bytes" aria-label="Permalink to &quot;3.1.1 字符串编码（str → bytes）&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;你好&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">encoded_s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s.encode(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># UTF-8 编码</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(encoded_s)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># b&#39;\\xe4\\xbd\\xa0\\xe5\\xa5\\xbd&#39;</span></span></code></pre></div><h4 id="_3-1-2-字符串解码-bytes-→-str" tabindex="-1">3.1.2 字符串解码（bytes → str） <a class="header-anchor" href="#_3-1-2-字符串解码-bytes-→-str" aria-label="Permalink to &quot;3.1.2 字符串解码（bytes → str）&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">decoded_s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> encoded_s.decode(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># UTF-8 解码</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(decoded_s)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 你好</span></span></code></pre></div><h3 id="_3-2-读取文件时的编码问题" tabindex="-1">3.2 读取文件时的编码问题 <a class="header-anchor" href="#_3-2-读取文件时的编码问题" aria-label="Permalink to &quot;3.2 读取文件时的编码问题&quot;">​</a></h3><p>在 Python 中，读取文本文件时需要指定编码，否则可能出现乱码。</p><h4 id="_3-2-1-读取-utf-8-文件" tabindex="-1">3.2.1 读取 UTF-8 文件 <a class="header-anchor" href="#_3-2-1-读取-utf-8-文件" aria-label="Permalink to &quot;3.2.1 读取 UTF-8 文件&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;r&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">encoding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f.read()</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(content)</span></span></code></pre></div><h4 id="_3-2-2-读取-gbk-文件并转换为-utf-8" tabindex="-1">3.2.2 读取 GBK 文件并转换为 UTF-8 <a class="header-anchor" href="#_3-2-2-读取-gbk-文件并转换为-utf-8" aria-label="Permalink to &quot;3.2.2 读取 GBK 文件并转换为 UTF-8&quot;">​</a></h4><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test_gbk.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;r&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">encoding</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gbk&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f.read()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转换为 UTF-8 编码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf8_content </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> content.encode(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(utf8_content.decode(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div>`,31)]))}const g=i(e,[["render",h]]);export{c as __pageData,g as default};

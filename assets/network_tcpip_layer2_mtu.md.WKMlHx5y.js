import{_ as r,c as e,o as a,ae as o}from"./chunks/framework.BHrE6nLq.js";const T=JSON.parse('{"title":"MTU","description":"","frontmatter":{},"headers":[],"relativePath":"network/tcpip/layer2/mtu.md","filePath":"network/tcpip/layer2/mtu.md"}'),s={name:"network/tcpip/layer2/mtu.md"};function n(i,t,l,p,c,M){return a(),e("div",null,t[0]||(t[0]=[o('<h1 id="mtu" tabindex="-1">MTU <a class="header-anchor" href="#mtu" aria-label="Permalink to &quot;MTU&quot;">​</a></h1><blockquote><p><strong>MTU</strong>：最大传输单元（Maximum Transmission Unit），通常指 <strong>IP MTU</strong>，即三层网络中数据包的最大大小。</p></blockquote><h3 id="mtu-基本概念" tabindex="-1">MTU 基本概念 <a class="header-anchor" href="#mtu-基本概念" aria-label="Permalink to &quot;MTU 基本概念&quot;">​</a></h3><ul><li><p><strong>二层 MTU</strong>：<br> 单位为帧，默认长度范围为 <strong>64 - 1518 字节</strong>。通常不会修改帧的最大长度，但在某些特殊情况下可以启用 <strong>Jumbo 帧</strong>，以支持超过 1518 字节的帧。</p></li><li><p><strong>三层 MTU</strong>：<br> 单位为包，默认长度范围为 <strong>46 - 1500 字节</strong>。</p></li><li><p><strong>路径 MTU(path mtu)</strong>：<br> 在发送方到接收方路径中，所有链路的 <strong>最小 MTU 值</strong>。它决定了数据包在网络中传输时可以使用的最大大小。</p></li></ul><h3 id="路径-mtu-发现-path-mtu-discovery" tabindex="-1">路径 MTU 发现（Path MTU Discovery） <a class="header-anchor" href="#路径-mtu-发现-path-mtu-discovery" aria-label="Permalink to &quot;路径 MTU 发现（Path MTU Discovery）&quot;">​</a></h3><p>路径 MTU 发现（PMTU Discovery）用于确定路径 MTU 值。它依赖于 <a href="https://tools.ietf.org/id/draft-leddy-6man-truncate-00.html" target="_blank" rel="noreferrer">ICMP PTB (Packet Too Big)</a> 消息来检测链路的最大传输能力。</p><ul><li><p><strong>PMTU 过时</strong>：<br> [<a href="https://tools.ietf.org/html/rfc1191" target="_blank" rel="noreferrer">RFC1191</a>] 推荐一个由 PMTUD 得到的 PMTU 值在10分钟后过时。路径 MTU发现 有时会因为防火墙和网关过滤可能<strong>不加选择地丢弃ICMP流量</strong>而出现问题，这会损害PMTU发现算法。困为这点，从基于系统范畴或有更好保证来看,可能要关闭PMTU发现。</p></li><li><p><strong>ICMP 过滤问题</strong>：<br> 防火墙或网关可能会丢弃 ICMP 流量，导致 PMTU 发现失败，从而影响数据传输。</p></li><li><p><strong>关闭 PMTU 发现</strong>：<br> 在 Linux 系统中，可通过修改 <code>/proc/sys/net/ipv4/ip_no_pmtu_disc</code> 文件，将其值设置为 <code>1</code> 以关闭 PMTU 发现。</p></li><li><p><strong>PLPMTUD（Packetization Layer PMTU Discovery）</strong>：<br> [<a href="https://datatracker.ietf.org/doc/rfc4821/" target="_blank" rel="noreferrer">RFC4821</a>] 提出了 PMTU 发现的替代方案 <strong>PLPMTUD</strong>，通过传输层的探测来避免依赖 ICMP。</p></li></ul><h3 id="mss-与-mtu的关系-mss-参考" tabindex="-1">MSS 与 MTU的关系 <a href="./../layer4/tcp_mss.html">MSS</a> 参考 <a class="header-anchor" href="#mss-与-mtu的关系-mss-参考" aria-label="Permalink to &quot;MSS 与 MTU的关系 [MSS](../layer4/tcp_mss.md) 参考&quot;">​</a></h3><hr><p>MSS 是 MTU 减去 TCP 和 IP Header长度计算而来，提高传输效率避免 IP 分片</p>',10)]))}const u=r(s,[["render",n]]);export{T as __pageData,u as default};

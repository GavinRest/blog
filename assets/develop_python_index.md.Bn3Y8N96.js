import{_ as o,c as a,o as n,ae as r}from"./chunks/framework.BHrE6nLq.js";const i="/images/python/python_tiobe.png",y=JSON.parse('{"title":"闲的无聊创作个 Python","description":"","frontmatter":{},"headers":[],"relativePath":"develop/python/index.md","filePath":"develop/python/index.md"}'),l={name:"develop/python/index.md"};function e(h,t,s,d,u,p){return n(),a("div",null,t[0]||(t[0]=[r('<h1 id="闲的无聊创作个-python" tabindex="-1">闲的无聊创作个 Python <a class="header-anchor" href="#闲的无聊创作个-python" aria-label="Permalink to &quot;闲的无聊创作个 Python&quot;">​</a></h1><h2 id="一、python-一个圣诞节的奇思妙想" tabindex="-1">一、Python 一个圣诞节的奇思妙想 <a class="header-anchor" href="#一、python-一个圣诞节的奇思妙想" aria-label="Permalink to &quot;一、Python 一个圣诞节的奇思妙想&quot;">​</a></h2><h3 id="_1-1-创始人的灵感" tabindex="-1">1.1 创始人的灵感 <a class="header-anchor" href="#_1-1-创始人的灵感" aria-label="Permalink to &quot;1.1 创始人的灵感&quot;">​</a></h3><p>1989年圣诞节期间，荷兰数学与计算机科学研究所的程序员<strong>Guido van Rossum</strong>为了打发假期时光，决定开发一个新的脚本语言。初衷是： &quot;创造一种兼具C语言强大功能和ABC语言简洁性的语言，让编程变得像用英语写作一样自然&quot;</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Guido_van_Rossum_in_PyConUS24_%28cropped%29.jpg/250px-Guido_van_Rossum_in_PyConUS24_%28cropped%29.jpg" alt="Guido_van_Rossum"></p><p>Guido 从英国喜剧团体&quot;Monty Python&quot;获得命名灵感，确立了Python<strong>轻松有趣</strong>的文化基调。</p><h3 id="_1-2-初代版本" tabindex="-1">1.2 初代版本 <a class="header-anchor" href="#_1-2-初代版本" aria-label="Permalink to &quot;1.2 初代版本&quot;">​</a></h3><ul><li><strong>1991年2月</strong>：发布第一个公开版本 Python 0.9.0</li><li>早期特性： <ul><li>异常处理机制</li><li>函数式编程支持</li><li>模块系统</li></ul></li><li>采用开源协议发布，奠定社区基础</li></ul><h2 id="二、进化之路" tabindex="-1">二、进化之路 <a class="header-anchor" href="#二、进化之路" aria-label="Permalink to &quot;二、进化之路&quot;">​</a></h2><h3 id="_2-1-重要版本时间线" tabindex="-1">2.1 重要版本时间线 <a class="header-anchor" href="#_2-1-重要版本时间线" aria-label="Permalink to &quot;2.1 重要版本时间线&quot;">​</a></h3><table tabindex="0"><thead><tr><th>版本</th><th>发布时间</th><th>里程碑特性</th></tr></thead><tbody><tr><td>Python 1</td><td>1994年</td><td>lambda, map, filter函数</td></tr><tr><td>Python 2</td><td>2000年</td><td>列表推导式、Unicode支持</td></tr><tr><td>Python 3</td><td>2008年</td><td>彻底解决字符编码问题</td></tr><tr><td>Python 3.5</td><td>2015年</td><td>async/await异步支持</td></tr><tr><td>Python 3.9</td><td>2020年</td><td>字典合并运算符、类型提示增强</td></tr></tbody></table><h3 id="_2-2-关键转折点" tabindex="-1">2.2 关键转折点 <a class="header-anchor" href="#_2-2-关键转折点" aria-label="Permalink to &quot;2.2 关键转折点&quot;">​</a></h3><ul><li><strong>2000年</strong>：Python 2.0发布，建立Python软件基金会（PSF）</li><li><strong>2008年</strong>：Python 3.0发布，因不向后兼容引发长期过渡期</li><li><strong>2018年</strong>：Guido卸任&quot;终身仁慈独裁者&quot;（BDFL）职务</li><li><strong>2020年</strong>：Python 2正式终止支持</li></ul><h2 id="三、江湖地位" tabindex="-1">三、江湖地位 <a class="header-anchor" href="#三、江湖地位" aria-label="Permalink to &quot;三、江湖地位&quot;">​</a></h2><h3 id="_1-python-在编程语言排行榜的地位" tabindex="-1">1. Python 在编程语言排行榜的地位 <a class="header-anchor" href="#_1-python-在编程语言排行榜的地位" aria-label="Permalink to &quot;1. Python 在编程语言排行榜的地位&quot;">​</a></h3><p>Python 近年来一直稳居各大编程语言排行榜的前列，主要体现在以下几个榜单：</p><ul><li><strong>TIOBE 指数</strong>：Python 常年位居前三，并在 2021 年首次超越 C 和 Java，成为全球最受欢迎的编程语言。2024 年仍然稳居第一。 <img src="'+i+'" alt="python TIOBE"></li><li><strong>PYPL（PopularitY of Programming Language）</strong>：根据 Google 搜索频率统计，Python 一直是最受欢迎的语言之一。</li><li><strong>Stack Overflow 开发者调查</strong>：Python 连续多年被评为“最受欢迎的编程语言”之一，并在数据科学、人工智能、Web 开发等领域占据主导地位。</li></ul><p>Python 之所以能成为全球最流行的语言之一，主要得益于其易学性、强大的生态系统，以及在 <strong>数据科学和 AI 领域的广泛应用</strong>。</p><h2 id="_2-python-在-ai-领域的崛起" tabindex="-1">2. Python 在 AI 领域的崛起 <a class="header-anchor" href="#_2-python-在-ai-领域的崛起" aria-label="Permalink to &quot;2. Python 在 AI 领域的崛起&quot;">​</a></h2><p>Python 在人工智能（AI）领域的崛起主要受到以下因素的推动：</p><h3 id="_1-强大的生态系统" tabindex="-1"><strong>(1) 强大的生态系统</strong> <a class="header-anchor" href="#_1-强大的生态系统" aria-label="Permalink to &quot;**(1) 强大的生态系统**&quot;">​</a></h3><p>Python 拥有众多专门用于 AI 和机器学习的库，如：</p><ul><li><strong>NumPy &amp; Pandas</strong>：用于数据处理和数学计算。</li><li><strong>Matplotlib &amp; Seaborn</strong>：数据可视化工具。</li><li><strong>Scikit-Learn</strong>：经典机器学习算法库，支持回归、分类、聚类等任务。</li><li><strong>TensorFlow &amp; PyTorch</strong>：深度学习框架，支持神经网络、计算加速等高级 AI 任务。</li><li><strong>OpenCV</strong>：计算机视觉领域的核心库。</li></ul><h3 id="_2-易用性-快速开发" tabindex="-1"><strong>(2) 易用性 &amp; 快速开发</strong> <a class="header-anchor" href="#_2-易用性-快速开发" aria-label="Permalink to &quot;**(2) 易用性 &amp; 快速开发**&quot;">​</a></h3><ul><li>Python 语法简洁，代码可读性高，适合 AI 研究人员快速实现和测试新算法。</li><li>相比 C++，Python 开发效率更高，适合 AI 研究中频繁的实验和迭代。</li></ul><h3 id="_3-强大的社区支持" tabindex="-1"><strong>(3) 强大的社区支持</strong> <a class="header-anchor" href="#_3-强大的社区支持" aria-label="Permalink to &quot;**(3) 强大的社区支持**&quot;">​</a></h3><ul><li>AI 领域的研究人员、企业和开发者广泛采用 Python，社区提供了大量开源资源和教程。</li><li>Google、Facebook、OpenAI 等科技公司都在 AI 研究中使用 Python，并贡献了 TensorFlow、PyTorch 等主流框架。</li></ul><h2 id="_3-为什么选-python" tabindex="-1">3. 为什么选 Python？ <a class="header-anchor" href="#_3-为什么选-python" aria-label="Permalink to &quot;3. 为什么选 Python？&quot;">​</a></h2><ul><li><strong>(1) 简单易学</strong>：Python 采用接近自然语言的语法，使得研究人员和开发者能够快速上手，降低了 AI 研究的门槛。</li><li><strong>(2) 丰富的 AI 生态</strong>：Python 生态中包含了几乎所有 AI 研究所需的工具，从数据处理、建模到深度学习，极大地提高了开发效率。</li><li><strong>(3) 跨平台 &amp; 高度兼容</strong>：Python 可以运行在 Windows、Linux、macOS 等多个平台，并且能够与 C/C++、Java、R 等语言兼容，使其在 AI 研究和应用中更加灵活。</li><li><strong>(4) 开发与部署一体化</strong>：Python 既可以用于 AI 研究，又可以直接用于生产部署（如 Web 服务、云计算），使得 AI 研究成果能够更快地转化为实际应用。</li></ul>',29)]))}const g=o(l,[["render",e]]);export{y as __pageData,g as default};

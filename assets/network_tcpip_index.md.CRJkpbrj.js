import{_ as t,c as i,o as r,ae as o}from"./chunks/framework.BHrE6nLq.js";const h=JSON.parse('{"title":"TCP/IP 协议栈","description":"","frontmatter":{},"headers":[],"relativePath":"network/tcpip/index.md","filePath":"network/tcpip/index.md"}'),a={name:"network/tcpip/index.md"};function n(P,l,e,s,g,p){return r(),i("div",null,l[0]||(l[0]=[o('<h1 id="tcp-ip-协议栈" tabindex="-1">TCP/IP 协议栈 <a class="header-anchor" href="#tcp-ip-协议栈" aria-label="Permalink to &quot;TCP/IP 协议栈&quot;">​</a></h1><h2 id="_1-tcp-ip-协议栈的前世今生" tabindex="-1">1. TCP/IP 协议栈的前世今生 <a class="header-anchor" href="#_1-tcp-ip-协议栈的前世今生" aria-label="Permalink to &quot;1. TCP/IP 协议栈的前世今生&quot;">​</a></h2><p>TCP/IP 协议栈是现代互联网的核心基础，起源于 <strong>ARPANET（阿帕网）</strong> 的研究项目。1970 年代，随着网络互联需求的增加，<strong>DARPA</strong> 资助开发了一套标准化的网络协议。1983 年，ARPANET 正式使用 TCP/IP 作为通信协议，最终逐渐发展成为互联网的基础协议。</p><h3 id="发展历程" tabindex="-1">发展历程 <a class="header-anchor" href="#发展历程" aria-label="Permalink to &quot;发展历程&quot;">​</a></h3><ol><li><strong>1974 年</strong>：最早的 TCP 规范提出。</li><li><strong>1980 年</strong>：IPv4 规范发布。</li><li><strong>1983 年</strong>：ARPANET 正式采用 TCP/IP 协议。</li><li><strong>1990 年代</strong>：互联网全面普及，成为主流网络通信协议。</li><li><strong>2000 年代</strong>：IPv6 逐步推广，解决 IPv4 地址耗尽的问题。</li></ol><h2 id="_2-tcp-ip-协议栈四层模型" tabindex="-1">2. TCP/IP 协议栈四层模型 <a class="header-anchor" href="#_2-tcp-ip-协议栈四层模型" aria-label="Permalink to &quot;2. TCP/IP 协议栈四层模型&quot;">​</a></h2><p>TCP/IP 协议栈由四个逻辑层组成</p><h3 id="_1-应用层" tabindex="-1"><strong>1. 应用层</strong> <a class="header-anchor" href="#_1-应用层" aria-label="Permalink to &quot;**1. 应用层**&quot;">​</a></h3><p>提供用户直接使用的网络服务。常见协议包括：</p><ul><li><strong>HTTP/HTTPS</strong>：网页数据传输。</li><li><strong>DNS</strong>：域名解析。</li><li><strong>SMTP/POP3/IMAP</strong>：电子邮件服务。</li><li><strong>FTP/TFTP</strong>：文件传输协议。</li></ul><h3 id="_2-传输层" tabindex="-1"><strong>2. 传输层</strong> <a class="header-anchor" href="#_2-传输层" aria-label="Permalink to &quot;**2. 传输层**&quot;">​</a></h3><p>负责端到端的通信与数据可靠性：</p><ul><li><strong>TCP</strong>：面向连接，提供可靠的数据传输（如数据包重传、排序）。</li><li><strong>UDP</strong>：无连接，适用于低延迟、不需要重传的应用（如视频、游戏）。</li></ul><h3 id="_3-网络层" tabindex="-1"><strong>3. 网络层</strong> <a class="header-anchor" href="#_3-网络层" aria-label="Permalink to &quot;**3. 网络层**&quot;">​</a></h3><p>负责将数据包路由到目的主机：</p><ul><li><strong>IP</strong>：提供主机间寻址与数据包转发。</li><li><strong>ARP</strong>：将 IP 地址解析为 MAC 地址。</li><li><strong>ICMP</strong>：网络诊断工具（如 ping 使用 ICMP 发送请求）。</li><li><strong>NAT</strong>：将私有 IP 映射到公网 IP。</li></ul><h3 id="_4-数据链路层" tabindex="-1"><strong>4. 数据链路层</strong> <a class="header-anchor" href="#_4-数据链路层" aria-label="Permalink to &quot;**4. 数据链路层**&quot;">​</a></h3><p>处理物理介质上的数据传输，确保数据在局域网上正确传输：</p><ul><li><strong>Ethernet</strong>：以太网协议，最常见的局域网标准。</li><li><strong>PPP</strong>：点对点协议，用于拨号网络连接。</li></ul><h2 id="_3-tcp-ip-重点" tabindex="-1">3. TCP/IP 重点 <a class="header-anchor" href="#_3-tcp-ip-重点" aria-label="Permalink to &quot;3. TCP/IP 重点&quot;">​</a></h2><p>想要深入理解 TCP/IP，建议掌握以下核心概念：</p><ol><li><p><strong>TCP/UDP 的区别与应用场景</strong></p><ul><li>TCP 三次握手、四次挥手、重传机制、流控机制、慢启动等。</li><li>UDP 适用于哪些场景？（如视频、VoIP）</li></ul></li><li><p><strong>IP 地址与子网划分</strong></p><ul><li>IPv4 地址结构、子网掩码、CIDR（无类别域间路由）。</li><li>IPv6 地址的简写规则与自动配置。</li><li>双栈中常见路由技术 OSPF、BGP、MPLS等</li></ul></li><li><p><strong>ICMP 与网络诊断工具</strong></p><ul><li>使用 ping 进行连通性测试。</li><li>traceroute 诊断路由路径。</li></ul></li><li><p><strong>ARP 与 MAC 地址</strong></p><ul><li>ARP 协议如何解析 IP 地址对应的 MAC 地址。</li><li>网络攻击中的 ARP 欺骗。</li></ul></li><li><p><strong>NAT 与公网 IP 转换</strong></p><ul><li>NAT 的类型（静态、动态、PAT）。</li><li>内网设备如何通过 NAT 访问互联网。</li></ul></li><li><p><strong>HTTP 与 HTTPS 的区别</strong></p><ul><li>HTTP 的无状态性。</li><li>HTTPS 中 HTTP1.1、HTTP2、HTTP3 工作原理，加解密过程。</li></ul></li></ol>',22)]))}const u=t(a,[["render",n]]);export{h as __pageData,u as default};

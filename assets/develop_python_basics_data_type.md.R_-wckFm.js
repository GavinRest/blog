import{_ as i,c as a,o as t,ae as h}from"./chunks/framework.BHrE6nLq.js";const y=JSON.parse('{"title":"Python 数据类型详解","description":"","frontmatter":{},"headers":[],"relativePath":"develop/python/basics/data_type.md","filePath":"develop/python/basics/data_type.md"}'),n={name:"develop/python/basics/data_type.md"};function e(p,s,l,k,d,o){return t(),a("div",null,s[0]||(s[0]=[h(`<h1 id="python-数据类型详解" tabindex="-1">Python 数据类型详解 <a class="header-anchor" href="#python-数据类型详解" aria-label="Permalink to &quot;Python 数据类型详解&quot;">​</a></h1><p>本文将介绍 Python 常见的数据类型。</p><h2 id="_1-数值类型-numeric-types" tabindex="-1">1. 数值类型（Numeric Types） <a class="header-anchor" href="#_1-数值类型-numeric-types" aria-label="Permalink to &quot;1. 数值类型（Numeric Types）&quot;">​</a></h2><p>Python 提供三种主要的数值类型：</p><h3 id="_1-1-整数-int" tabindex="-1">1.1 整数（int） <a class="header-anchor" href="#_1-1-整数-int" aria-label="Permalink to &quot;1.1 整数（int）&quot;">​</a></h3><p>Python 的整数类型 <code>int</code>，可以表示任意大小的整数。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 42</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 整数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;int&#39;&gt;</span></span></code></pre></div><h3 id="_1-2-浮点数-float" tabindex="-1">1.2 浮点数（float） <a class="header-anchor" href="#_1-2-浮点数-float" aria-label="Permalink to &quot;1.2 浮点数（float）&quot;">​</a></h3><p>浮点数用于表示小数和科学计数法。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3.14</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 浮点数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;float&#39;&gt;</span></span></code></pre></div><h3 id="_1-3-复数-complex" tabindex="-1">1.3 复数（complex） <a class="header-anchor" href="#_1-3-复数-complex" aria-label="Permalink to &quot;1.3 复数（complex）&quot;">​</a></h3><p>Python 还支持复数，使用 <code>j</code> 表示虚数单位。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">j</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 复数</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(z))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;complex&#39;&gt;</span></span></code></pre></div><h2 id="_2-布尔类型-boolean-type" tabindex="-1">2. 布尔类型（Boolean Type） <a class="header-anchor" href="#_2-布尔类型-boolean-type" aria-label="Permalink to &quot;2. 布尔类型（Boolean Type）&quot;">​</a></h2><p>布尔类型 <code>bool</code> 只有两个值：<code>True</code> 和 <code>False</code>，用于逻辑运算。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_python_fun </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(is_python_fun))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;bool&#39;&gt;</span></span></code></pre></div><h2 id="_3-字符串类型-string-type" tabindex="-1">3. 字符串类型（String Type） <a class="header-anchor" href="#_3-字符串类型-string-type" aria-label="Permalink to &quot;3. 字符串类型（String Type）&quot;">​</a></h2><p>字符串 <code>str</code> 用于存储文本，可以使用单引号或双引号定义。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello, Python!&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;str&#39;&gt;</span></span></code></pre></div><p>支持多行字符串：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">multi_line_str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">This is a multi-line string.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">It spans multiple lines.</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;&#39;</span></span></code></pre></div><p>字符串支持索引、切片和常见操作：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># H</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Hello</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 字符串长度</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s.upper())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 转换为大写</span></span></code></pre></div><h2 id="_4-序列类型-sequence-types" tabindex="-1">4. 序列类型（Sequence Types） <a class="header-anchor" href="#_4-序列类型-sequence-types" aria-label="Permalink to &quot;4. 序列类型（Sequence Types）&quot;">​</a></h2><p>Python 具有三种常见的序列类型：<strong>列表（list）、元组（tuple）和范围（range）</strong>。</p><h3 id="_4-1-列表-list" tabindex="-1">4.1 列表（List） <a class="header-anchor" href="#_4-1-列表-list" aria-label="Permalink to &quot;4.1 列表（List）&quot;">​</a></h3><p>列表是可变的序列，使用 <code>[]</code> 表示，可以存储不同类型的元素。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_list))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;list&#39;&gt;</span></span></code></pre></div><p>列表支持索引、切片、修改和方法：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_list.append(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加元素</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_list[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取第一个元素</span></span></code></pre></div><h3 id="_4-2-元组-tuple" tabindex="-1">4.2 元组（Tuple） <a class="header-anchor" href="#_4-2-元组-tuple" aria-label="Permalink to &quot;4.2 元组（Tuple）&quot;">​</a></h3><p>元组类似于列表，但<strong>不可变</strong>，使用 <code>()</code> 定义。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_tuple </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Python&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_tuple))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;tuple&#39;&gt;</span></span></code></pre></div><p>元组的元素不能更改，但可以访问：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_tuple[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2</span></span></code></pre></div><h3 id="_4-3-范围-range" tabindex="-1">4.3 范围（Range） <a class="header-anchor" href="#_4-3-范围-range" aria-label="Permalink to &quot;4.3 范围（Range）&quot;">​</a></h3><p><code>range()</code> 用于生成数值序列。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成 1,3,5,7,9</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r))</span></span></code></pre></div><h2 id="_5-集合类型-set-types" tabindex="-1">5. 集合类型（Set Types） <a class="header-anchor" href="#_5-集合类型-set-types" aria-label="Permalink to &quot;5. 集合类型（Set Types）&quot;">​</a></h2><p>集合 <code>set</code> 是<strong>无序</strong>、<strong>不重复</strong>的元素集合，使用 <code>{}</code> 创建。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_set </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_set)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># {1, 2, 3, 4}</span></span></code></pre></div><p>集合的常见操作：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_set.add(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加元素</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_set.remove(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移除元素</span></span></code></pre></div><h2 id="_6-字典类型-dictionary-type" tabindex="-1">6. 字典类型（Dictionary Type） <a class="header-anchor" href="#_6-字典类型-dictionary-type" aria-label="Permalink to &quot;6. 字典类型（Dictionary Type）&quot;">​</a></h2><p>字典 <code>dict</code> 是键值对（key-value pair）映射，使用 <code>{}</code> 创建。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_dict </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_dict[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Alice</span></span></code></pre></div><p>字典的常见操作：</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">my_dict[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;city&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;New York&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 添加键值对</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_dict.keys())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取所有键</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(my_dict.values())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取所有值</span></span></code></pre></div><h2 id="_7-none-类型" tabindex="-1">7. None 类型 <a class="header-anchor" href="#_7-none-类型" aria-label="Permalink to &quot;7. None 类型&quot;">​</a></h2><p><code>NoneType</code> 只有一个值 <code>None</code>，表示“无值”或“空值”。</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> None</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;class &#39;NoneType&#39;&gt;</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><table tabindex="0"><thead><tr><th>数据类型</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>int</code></td><td>整数</td><td><code>42</code></td></tr><tr><td><code>float</code></td><td>浮点数</td><td><code>3.14</code></td></tr><tr><td><code>complex</code></td><td>复数</td><td><code>2 + 3j</code></td></tr><tr><td><code>bool</code></td><td>布尔值</td><td><code>True</code> / <code>False</code></td></tr><tr><td><code>str</code></td><td>字符串</td><td><code>&quot;Hello&quot;</code></td></tr><tr><td><code>list</code></td><td>列表</td><td><code>[1, 2, 3]</code></td></tr><tr><td><code>tuple</code></td><td>元组</td><td><code>(1, 2, 3)</code></td></tr><tr><td><code>range</code></td><td>范围</td><td><code>range(5)</code></td></tr><tr><td><code>set</code></td><td>集合</td><td><code>{1, 2, 3}</code></td></tr><tr><td><code>dict</code></td><td>字典</td><td><code>{ &quot;key&quot;: &quot;value&quot; }</code></td></tr><tr><td><code>NoneType</code></td><td>空值</td><td><code>None</code></td></tr></tbody></table>`,53)]))}const E=i(n,[["render",e]]);export{y as __pageData,E as default};

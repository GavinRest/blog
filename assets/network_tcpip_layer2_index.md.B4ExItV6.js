import{_ as e,c as r,o as t,ae as o}from"./chunks/framework.BHrE6nLq.js";const n="/images/tcpip/layer2/Data_Link_Layer.webp",P=JSON.parse('{"title":"数据链路层 (Layer 2) 协议简介","description":"","frontmatter":{},"headers":[],"relativePath":"network/tcpip/layer2/index.md","filePath":"network/tcpip/layer2/index.md"}'),l={name:"network/tcpip/layer2/index.md"};function i(s,a,h,p,d,c){return t(),r("div",null,a[0]||(a[0]=[o('<h1 id="数据链路层-layer-2-协议简介" tabindex="-1">数据链路层 (Layer 2) 协议简介 <a class="header-anchor" href="#数据链路层-layer-2-协议简介" aria-label="Permalink to &quot;数据链路层 (Layer 2) 协议简介&quot;">​</a></h1><p>数据链路层是 OSI Model 第二层，负责在物理媒介上传输数据帧，并确保数据的可靠性。它通过硬件地址（如 MAC 地址）识别设备，并提供错误检测、流量控制等功能。</p><hr><p><img src="'+n+'" alt="数据链路层"></p><h2 id="数据链路层的核心功能" tabindex="-1">数据链路层的核心功能 <a class="header-anchor" href="#数据链路层的核心功能" aria-label="Permalink to &quot;数据链路层的核心功能&quot;">​</a></h2><ul><li><strong>数据封装</strong>：将网络层的数据封装成帧，附加源和目的 MAC 地址。</li><li><strong>错误检测</strong>：通过 CRC 等机制检测传输错误。</li><li><strong>流量控制</strong>：协调传输速率，防止拥塞。</li><li><strong>访问控制</strong>：在共享媒介中控制设备的通信权限（如 CSMA/CD）。</li></ul><h2 id="主要协议" tabindex="-1">主要协议 <a class="header-anchor" href="#主要协议" aria-label="Permalink to &quot;主要协议&quot;">​</a></h2><h3 id="_1-以太网-ethernet" tabindex="-1">1. <strong>以太网 (Ethernet)</strong> <a class="header-anchor" href="#_1-以太网-ethernet" aria-label="Permalink to &quot;1. **以太网 (Ethernet)**&quot;">​</a></h3><p>最常用的局域网协议，采用 MAC 地址标识设备，支持广播和多播。常见标准包括 10BASE-T、100BASE-T、1000BASE-T。</p><h3 id="_2-点对点协议-ppp" tabindex="-1">2. <strong>点对点协议 (PPP)</strong> <a class="header-anchor" href="#_2-点对点协议-ppp" aria-label="Permalink to &quot;2. **点对点协议 (PPP)**&quot;">​</a></h3><p>用于点对点链路，如拨号和 VPN。支持认证、压缩、错误检测和多协议封装。</p><h3 id="_3-虚拟局域网-vlan" tabindex="-1">3. <strong>虚拟局域网 (VLAN)</strong> <a class="header-anchor" href="#_3-虚拟局域网-vlan" aria-label="Permalink to &quot;3. **虚拟局域网 (VLAN)**&quot;">​</a></h3><p>通过逻辑划分网络，隔离广播域、提升安全性与管理效率。基于 IEEE 802.1Q 实现。</p><h3 id="_4-帧中继-frame-relay" tabindex="-1">4. <strong>帧中继 (Frame Relay)</strong> <a class="header-anchor" href="#_4-帧中继-frame-relay" aria-label="Permalink to &quot;4. **帧中继 (Frame Relay)**&quot;">​</a></h3><p>面向广域网的协议，采用虚拟电路传输数据，具有高效低延迟的特点，现多被 MPLS 等替代。</p><h3 id="_5-链路聚合控制协议-lacp" tabindex="-1">5. <strong>链路聚合控制协议 (LACP)</strong> <a class="header-anchor" href="#_5-链路聚合控制协议-lacp" aria-label="Permalink to &quot;5. **链路聚合控制协议 (LACP)**&quot;">​</a></h3><p>基于 IEEE 802.3ad 标准，聚合多条物理链路为一条逻辑链路，实现带宽叠加与链路冗余。</p><h3 id="_6-地址解析协议-arp" tabindex="-1">6. <strong>地址解析协议 (ARP)</strong> <a class="header-anchor" href="#_6-地址解析协议-arp" aria-label="Permalink to &quot;6. **地址解析协议 (ARP)**&quot;">​</a></h3><p>ARP 用于将 IP 地址解析为物理 MAC 地址。网络设备通过广播 ARP 请求来查询目标设备的 MAC 地址，从而建立 IP 地址和 MAC 地址之间的映射关系。</p><h3 id="_7-链路层发现协议-lldp" tabindex="-1">7. <strong>链路层发现协议 (LLDP)</strong> <a class="header-anchor" href="#_7-链路层发现协议-lldp" aria-label="Permalink to &quot;7. **链路层发现协议 (LLDP)**&quot;">​</a></h3><p>基于 IEEE 802.1AB 的开放协议，用于交换设备信息，便于网络管理与拓扑发现。</p><h3 id="_8-生成树协议-stp" tabindex="-1">8. <strong>生成树协议（STP）</strong> <a class="header-anchor" href="#_8-生成树协议-stp" aria-label="Permalink to &quot;8. **生成树协议（STP）**&quot;">​</a></h3><p>防止以太网环路的协议，通过选举根桥并阻塞冗余链路来维护网络拓扑的稳定性。</p><h2 id="✅-总结" tabindex="-1">✅ 总结 <a class="header-anchor" href="#✅-总结" aria-label="Permalink to &quot;✅ 总结&quot;">​</a></h2><p>数据链路层是网络通信的基础，承担设备寻址、数据封装与错误控制等关键职责。以太网、VLAN、LACP 等协议广泛应用于企业网络中，为上层协议提供可靠的数据传输保障。</p>',25)]))}const u=e(l,[["render",i]]);export{P as __pageData,u as default};

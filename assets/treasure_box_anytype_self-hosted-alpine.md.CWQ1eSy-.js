import{_ as a,c as i,o as n,ae as l}from"./chunks/framework.BHrE6nLq.js";const r=JSON.parse('{"title":"anytype 自托管 (alpine)","description":"","frontmatter":{},"headers":[],"relativePath":"treasure_box/anytype/self-hosted-alpine.md","filePath":"treasure_box/anytype/self-hosted-alpine.md"}'),e={name:"treasure_box/anytype/self-hosted-alpine.md"};function p(t,s,h,k,d,o){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="anytype-自托管-alpine" tabindex="-1">anytype 自托管 (alpine) <a class="header-anchor" href="#anytype-自托管-alpine" aria-label="Permalink to &quot;anytype 自托管 (alpine)&quot;">​</a></h1><blockquote><p><a href="https://doc.anytype.io/anytype-docs/advanced/data-and-security/self-hosting/self-hosted" target="_blank" rel="noreferrer">https://doc.anytype.io/anytype-docs/advanced/data-and-security/self-hosting/self-hosted</a></p></blockquote><h2 id="先决条件安装工具" tabindex="-1">先决条件安装工具 <a class="header-anchor" href="#先决条件安装工具" aria-label="Permalink to &quot;先决条件安装工具&quot;">​</a></h2><blockquote><p><a href="https://docs.docker.com/engine/install/ubuntu/" target="_blank" rel="noreferrer">https://docs.docker.com/engine/install/ubuntu/</a></p></blockquote><ul><li>在 PVE 安装 alpine CPU 类别建议选择 host</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 检查是否支持 avx 指令集</span></span>
<span class="line"><span>cat /proc/cpuinfo | grep avx</span></span></code></pre></div><h3 id="安装-alpine" tabindex="-1">安装 alpine <a class="header-anchor" href="#安装-alpine" aria-label="Permalink to &quot;安装 alpine&quot;">​</a></h3><ul><li>根据提示安装系统</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>setup-alpine</span></span>
<span class="line"><span></span></span>
<span class="line"><span>安装系统时候选择 sys</span></span></code></pre></div><ul><li>修改 IP</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">localhost:~#</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/network/interfaces</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loopback</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iface</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> eth0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inet</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> static</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        address</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.5.9</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        netmask</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 255.255.255.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        gateway</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 192.168.5.8</span></span></code></pre></div><ul><li>添加 docker 挂载硬盘</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 手动添加 128G 硬盘</span></span>
<span class="line"><span>Disk /dev/xvdb: 128 GB, 137438953472 bytes, 268435456 sectors</span></span>
<span class="line"><span>16709 cylinders, 255 heads, 63 sectors/track</span></span>
<span class="line"><span>Units: sectors of 1 * 512 = 512 bytes</span></span></code></pre></div><ul><li>挂载硬盘</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>mkdir -p /var/lib/docker</span></span>
<span class="line"><span></span></span>
<span class="line"><span>mkfs.ext4 /dev/xvdb</span></span>
<span class="line"><span># blkid /dev/xvdb</span></span>
<span class="line"><span>/dev/xvdb: UUID=&quot;1cb0d2cd-333f-47f1-8006-60b55ddf5371&quot; BLOCK_SIZE=&quot;4096&quot; TYPE=&quot;ext4&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>vi /etc/fstab</span></span>
<span class="line"><span>UUID=1cb0d2cd-333f-47f1-8006-60b55ddf5371 /var/lib/docker ext4 defaults 0 0</span></span></code></pre></div><h3 id="安装-docker" tabindex="-1">安装 docker <a class="header-anchor" href="#安装-docker" aria-label="Permalink to &quot;安装 docker&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;http://dl-cdn.alpinelinux.org/alpine/latest-stable/community&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/apk/repositories</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose</span></span></code></pre></div><h3 id="部署-anytype-自托管" tabindex="-1">部署 anytype 自托管 <a class="header-anchor" href="#部署-anytype-自托管" aria-label="Permalink to &quot;部署 anytype 自托管&quot;">​</a></h3><ul><li>部署 any-sync-dockercompose</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/anyproto/any-sync-dockercompose.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> any-sync-dockercompose/</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;EXTERNAL_LISTEN_HOSTS=192.168.5.9&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.override</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rc-update</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reboot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span></span></code></pre></div><ul><li>获取配置文件</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>localhost:~/any-sync-dockercompose/etc# cat client.yml</span></span></code></pre></div><h3 id="any-sync-dockercompose-迁移" tabindex="-1">any-sync-dockercompose 迁移 <a class="header-anchor" href="#any-sync-dockercompose-迁移" aria-label="Permalink to &quot;any-sync-dockercompose 迁移&quot;">​</a></h3><ol><li>迁移 <code>/var/lib/docker</code> 目录到 <code>alpine</code> 新系统</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span></span></span></code></pre></div><ol start="2"><li><p>将备份好的 <code>any-sync-dockercompose.tar.gz</code> 上传到 <code>alpine</code> 新系统</p></li><li></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>cd /opt/any-sync-dockercompose</span></span>
<span class="line"><span>make start </span></span>
<span class="line"><span>docker-compose up -d</span></span></code></pre></div><h3 id="日志清理" tabindex="-1">日志清理 <a class="header-anchor" href="#日志清理" aria-label="Permalink to &quot;日志清理&quot;">​</a></h3><ul><li>查看日志</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>#  查看日志</span></span>
<span class="line"><span>docker logs -f any-sync-dockercompose-any-sync-node-1-1 638e20b65528</span></span>
<span class="line"><span>docker logs -f any-sync-dockercompose-any-sync-filenode-1 45bd6622321b</span></span>
<span class="line"><span>docker logs -f any-sync-dockercompose-any-sync-coordinator-1 4d7d2b90346e</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 查看哪些容器日志占空间最多</span></span>
<span class="line"><span>du -sh /var/lib/docker/containers/*/*-json.log | sort -hr | head</span></span></code></pre></div><ul><li>清理日志脚本</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;🧹 Starting Docker container logs cleanup...&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取所有正在运行的容器 ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CONTAINERS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$CONTAINERS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;⚠️  No running containers found. Nothing to do.&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CONTAINER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $CONTAINERS; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  LOG_FILE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inspect</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;{{.LogPath}}&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$CONTAINER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$LOG_FILE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;🧹 Clearing log for container </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$CONTAINER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$LOG_FILE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    truncate</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$LOG_FILE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;❌ Log file not found for container </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$CONTAINER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  fi</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;✅ All container logs cleaned successfully.&quot;</span></span></code></pre></div>`,32)]))}const F=a(e,[["render",p]]);export{r as __pageData,F as default};

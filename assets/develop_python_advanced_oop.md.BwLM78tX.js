import{_ as o,c as e,o as t,ae as r}from"./chunks/framework.BHrE6nLq.js";const c=JSON.parse('{"title":"面向对象 vs 面向过程","description":"","frontmatter":{},"headers":[],"relativePath":"develop/python/advanced/oop.md","filePath":"develop/python/advanced/oop.md"}'),l={name:"develop/python/advanced/oop.md"};function n(s,a,i,d,p,h){return t(),e("div",null,a[0]||(a[0]=[r('<h1 id="面向对象-vs-面向过程" tabindex="-1">面向对象 vs 面向过程 <a class="header-anchor" href="#面向对象-vs-面向过程" aria-label="Permalink to &quot;面向对象 vs 面向过程&quot;">​</a></h1><h2 id="_1-面向过程-pop" tabindex="-1">1. 面向过程（POP） <a class="header-anchor" href="#_1-面向过程-pop" aria-label="Permalink to &quot;1. 面向过程（POP）&quot;">​</a></h2><p>面向过程就像做菜时的操作清单。你按照步骤做，每一步都单独执行，最后完成一道菜。</p><ul><li><strong>比喻</strong>：做菜时，你依次做“买菜”、“切菜”、“煮菜”、“调味”等步骤，每个步骤都是独立的，完成一个再做下一个。</li></ul><h2 id="_2-面向对象-oop" tabindex="-1">2. 面向对象（OOP） <a class="header-anchor" href="#_2-面向对象-oop" aria-label="Permalink to &quot;2. 面向对象（OOP）&quot;">​</a></h2><p>面向对象就像团队中的每个人都有自己的角色，每个人负责自己擅长的部分，大家合作完成做菜的任务。</p><ul><li><strong>比喻</strong>：团队中有“买菜员”（买菜）、“切菜员”（切菜）、“大厨”（煮菜和调味），每个人有自己的职责，合作完成一道菜。</li></ul><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li><strong>面向过程</strong>像一份做菜的步骤清单，简单直接，适合小而简单的任务。</li><li><strong>面向对象</strong>像一个团队合作，每个成员负责自己的部分，协作完成复杂任务，适合大规模的项目。</li></ul>',9)]))}const u=o(l,[["render",n]]);export{c as __pageData,u as default};

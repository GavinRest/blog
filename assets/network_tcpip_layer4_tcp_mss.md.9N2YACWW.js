import{_ as t,c as e,o as i,ae as l}from"./chunks/framework.BHrE6nLq.js";const s="/images/tcpip/layer4/tcpMSS%E5%8D%8F%E5%95%86-1.png",p="/images/tcpip/layer4/tcpMSS%E5%8D%8F%E5%95%86-2.png",n="/images/tcpip/layer4/tcpMSS%E5%8D%8F%E5%95%86-3.png",d=JSON.parse('{"title":"tcpMSS","description":"","frontmatter":{},"headers":[],"relativePath":"network/tcpip/layer4/tcp_mss.md","filePath":"network/tcpip/layer4/tcp_mss.md"}'),r={name:"network/tcpip/layer4/tcp_mss.md"};function c(o,a,S,m,u,h){return i(),e("div",null,a[0]||(a[0]=[l('<h1 id="tcpmss" tabindex="-1">tcpMSS <a class="header-anchor" href="#tcpmss" aria-label="Permalink to &quot;tcpMSS&quot;">​</a></h1><p><strong>一句话描述 tcpMSS 功能：保证带宽利用率的同时避免 TCP segment 到 IP 层被分片。</strong></p><h3 id="概念" tabindex="-1">概念 <a class="header-anchor" href="#概念" aria-label="Permalink to &quot;概念&quot;">​</a></h3><hr><ul><li><p>MSS：最大分段大小（Maximum Segment Size）。在有些书中，将它看作可“协商”选项。它并不是任何条件下都可协商。当建立一个连接时，每一方都有用于通告它期望接收的MSS选项(MSS选项只能出现在SYN报文段中)。如果一方不接收来自另一方的MSS值，则MSS就定为默认值536字节(这个默认值允许20字节的IP首部和20字节的TCP首部以适合576字节IP数据报)。</p></li><li><p>路径 MTU：两台通信主机路径中的最小 MTU。它被称作路径 MTU。</p><ul><li>路径MTU在两个方向上不一定是一致的。</li></ul></li></ul><h3 id="tcpmss-期望值" tabindex="-1">tcpMSS 期望值 <a class="header-anchor" href="#tcpmss-期望值" aria-label="Permalink to &quot;tcpMSS 期望值&quot;">​</a></h3><hr><p><strong>tcpMSS 期望值是在三次握手阶段 “协商” 得出。</strong></p><h4 id="场景1-两端-mtu-不一致-client-mtu-1500-server-mtu-1400" tabindex="-1">场景1：两端 MTU 不一致（Client MTU：1500，Server MTU：1400） <a class="header-anchor" href="#场景1-两端-mtu-不一致-client-mtu-1500-server-mtu-1400" aria-label="Permalink to &quot;场景1：两端 MTU 不一致（Client MTU：1500，Server MTU：1400）&quot;">​</a></h4><p><img src="'+s+`" alt="tcpMSS协商-1"></p><ul><li><p>协商过程：</p><ul><li>Client SYN包，期望 MSS 值为 1460（MSS = 1500 - 20(ip头) - 20(tcp头) = 1460 byte）</li><li>Server SYN包，期望 MSS 值为 1360（MSS = 1400 - 20(ip头) - 20(tcp头) = 1360 byte）</li><li>结果：MSS = 1360</li></ul></li><li><p>wireshark 参考</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>TCP Option - Maximum segment size: 1460 bytes</span></span>
<span class="line"><span>    Kind: Maximum Segment Size (2)</span></span>
<span class="line"><span>    Length: 4</span></span>
<span class="line"><span>    MSS Value: 1460</span></span></code></pre></div><h4 id="场景2-两端、中间-mtu-均不一致" tabindex="-1">场景2：两端、中间 MTU 均不一致 <a class="header-anchor" href="#场景2-两端、中间-mtu-均不一致" aria-label="Permalink to &quot;场景2：两端、中间 MTU 均不一致&quot;">​</a></h4><p><img src="`+p+'" alt="tcpMSS协商-2"></p><ul><li>协商过程： <ul><li>待实验验证</li><li>路径 MTU 发现</li></ul></li></ul><h4 id="场景3-中间经过隧道转发" tabindex="-1">场景3：中间经过隧道转发 <a class="header-anchor" href="#场景3-中间经过隧道转发" aria-label="Permalink to &quot;场景3：中间经过隧道转发&quot;">​</a></h4><p><img src="'+n+'" alt="tcpMSS协商-3"></p><ul><li>协商过程： <ul><li>待实验验证</li></ul></li></ul>',18)]))}const _=t(r,[["render",c]]);export{d as __pageData,_ as default};
